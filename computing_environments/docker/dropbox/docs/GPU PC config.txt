

the.kim@ubuntu-gpu-office:~$ sudo nano /etc/default/grub
[sudo] password for the.kim: 

#TKIM,2018-03-26
#GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash nomodeset"
#TKIM,2018-03-26


the.kim@ubuntu-gpu-office:~$ sudo update-grub
Generating grub configuration file ...
Warning: Setting GRUB_TIMEOUT to a non-zero value when GRUB_HIDDEN_TIMEOUT is set is no longer supported.
Found linux image: /boot/vmlinuz-4.13.0-37-generic
Found initrd image: /boot/initrd.img-4.13.0-37-generic
Found linux image: /boot/vmlinuz-4.13.0-36-generic
Found initrd image: /boot/initrd.img-4.13.0-36-generic
Found linux image: /boot/vmlinuz-4.13.0-32-generic
Found initrd image: /boot/initrd.img-4.13.0-32-generic
Found memtest86+ image: /memtest86+.elf
Found memtest86+ image: /memtest86+.bin
done

the.kim@ubuntu-gpu-office:~$ sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
[sudo] password for the.kim: 
Reading package lists... Done
Building dependency tree       
Reading state information... Done
apt-transport-https is already the newest version (1.2.26).
ca-certificates is already the newest version (20170717~16.04.1).
curl is already the newest version (7.47.0-1ubuntu2.7).
software-properties-common is already the newest version (0.96.20.7).
0 upgraded, 0 newly installed, 0 to remove and 3 not upgraded.
the.kim@ubuntu-gpu-office:~$ curl -fsSL
curl: no URL specified!
curl: try 'curl --help' or 'curl --manual' for more information
the.kim@ubuntu-gpu-office:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
OK
the.kim@ubuntu-gpu-office:~$ sudo apt-key fingerprint 0EBFCD88
pub   4096R/0EBFCD88 2017-02-22
      Key fingerprint = 9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88
uid                  Docker Release (CE deb) <docker@docker.com>
sub   4096R/F273FCD8 2017-02-22

the.kim@ubuntu-gpu-office:~$ sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
the.kim@ubuntu-gpu-office:~$ sudo apt-get update
Get:1 file:/var/cuda-repo-9-0-local  InRelease
Ign:1 file:/var/cuda-repo-9-0-local  InRelease
Get:2 file:/var/cuda-repo-9-0-local  Release [574 B]
Get:2 file:/var/cuda-repo-9-0-local  Release [574 B]
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease                
Hit:5 http://storage.googleapis.com/bazel-apt stable InRelease                 
Ign:6 http://dl.google.com/linux/chrome/deb stable InRelease                   
Hit:7 http://dl.google.com/linux/chrome/deb stable Release                     
Hit:8 http://us.archive.ubuntu.com/ubuntu xenial InRelease                     
Hit:10 http://ppa.launchpad.net/otto-kesselgulasch/gimp/ubuntu xenial InRelease
Get:11 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]    
Get:12 http://us.archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]   
Ign:13 http://archive.canonical.com precise InRelease                          
Hit:14 http://archive.canonical.com precise Release                            
Get:16 http://us.archive.ubuntu.com/ubuntu xenial-backports InRelease [102 kB] 
Fetched 306 kB in 1s (155 kB/s)                                      
Reading package lists... Done
W: http://archive.canonical.com/dists/precise/Release.gpg: Signature by key 630239CC130E1A7FD81A27B140976EAF437D05B5 uses weak digest algorithm (SHA1)
the.kim@ubuntu-gpu-office:~$ sudo apt-get install docker-ce=17.12.0~ce-0~ubuntu
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following package was automatically installed and is no longer required:
  pigz
Use 'sudo apt autoremove' to remove it.
The following packages will be DOWNGRADED:
  docker-ce
0 upgraded, 0 newly installed, 1 downgraded, 0 to remove and 3 not upgraded.
Need to get 30.2 MB of archives.
After this operation, 32.3 MB disk space will be freed.
Do you want to continue? [Y/n] y
Get:1 https://download.docker.com/linux/ubuntu xenial/stable amd64 docker-ce amd64 17.12.0~ce-0~ubuntu [30.2 MB]
Fetched 30.2 MB in 2s (10.5 MB/s)     
dpkg: warning: downgrading docker-ce from 18.03.0~ce-0~ubuntu to 17.12.0~ce-0~ubuntu
(Reading database ... 263509 files and directories currently installed.)
Preparing to unpack .../docker-ce_17.12.0~ce-0~ubuntu_amd64.deb ...
Unpacking docker-ce (17.12.0~ce-0~ubuntu) over (18.03.0~ce-0~ubuntu) ...
Processing triggers for systemd (229-4ubuntu21.2) ...
Processing triggers for ureadahead (0.100.0-19) ...
ureadahead will be reprofiled on next reboot
Processing triggers for man-db (2.7.5-1) ...
Setting up docker-ce (17.12.0~ce-0~ubuntu) ...
the.kim@ubuntu-gpu-office:~$ sudo docker run hello-world

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://cloud.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/engine/userguide/

the.kim@ubuntu-gpu-office:~$ sudo usermod -aG docker $USER
the.kim@ubuntu-gpu-office:~$ curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add-
Usage: apt-key [--keyring file] [command] [arguments]

Manage apt's list of trusted keys

  apt-key add <file>          - add the key contained in <file> ('-' for stdin)
  apt-key del <keyid>         - remove the key <keyid>
  apt-key export <keyid>      - output the key <keyid>
  apt-key exportall           - output all trusted keys
  apt-key update              - update keys using the keyring package
  apt-key net-update          - update keys using the network
  apt-key list                - list keys
  apt-key finger              - list fingerprints
  apt-key adv                 - pass advanced options to gpg (download key)

If no specific keyring file is given the command applies to all keyring files.
(23) Failed writing body
the.kim@ubuntu-gpu-office:~$ curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
OK
the.kim@ubuntu-gpu-office:~$ curl -s -L https://nvidia.github.io/nvidia-docker/ubuntu16.04/amd64/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
deb https://nvidia.github.io/libnvidia-container/ubuntu16.04/$(ARCH) /
deb https://nvidia.github.io/nvidia-container-runtime/ubuntu16.04/$(ARCH) /
deb https://nvidia.github.io/nvidia-docker/ubuntu16.04/$(ARCH) /
the.kim@ubuntu-gpu-office:~$ sudo apt-get update
Get:1 file:/var/cuda-repo-9-0-local  InRelease
Ign:1 file:/var/cuda-repo-9-0-local  InRelease
Get:2 file:/var/cuda-repo-9-0-local  Release [574 B]
Get:2 file:/var/cuda-repo-9-0-local  Release [574 B]
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease                
Ign:5 http://dl.google.com/linux/chrome/deb stable InRelease                   
Hit:6 http://storage.googleapis.com/bazel-apt stable InRelease                 
Hit:7 http://dl.google.com/linux/chrome/deb stable Release                     
Ign:8 http://archive.canonical.com precise InRelease                           
Get:9 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]     
Hit:11 http://ppa.launchpad.net/otto-kesselgulasch/gimp/ubuntu xenial InRelease
Hit:12 http://us.archive.ubuntu.com/ubuntu xenial InRelease                    
Hit:13 http://archive.canonical.com precise Release                            
Get:14 https://nvidia.github.io/libnvidia-container/ubuntu16.04/amd64  InRelease [1,106 B]
Get:15 https://nvidia.github.io/nvidia-container-runtime/ubuntu16.04/amd64  InRelease [1,103 B]
Get:16 http://us.archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]   
Get:17 https://nvidia.github.io/nvidia-docker/ubuntu16.04/amd64  InRelease [1,096 B]
Get:19 https://nvidia.github.io/libnvidia-container/ubuntu16.04/amd64  Packages [3,504 B]
Get:20 https://nvidia.github.io/nvidia-container-runtime/ubuntu16.04/amd64  Packages [5,492 B]
Get:21 https://nvidia.github.io/nvidia-docker/ubuntu16.04/amd64  Packages [5,696 B]
Get:22 http://us.archive.ubuntu.com/ubuntu xenial-backports InRelease [102 kB] 
Fetched 324 kB in 1s (166 kB/s)    
Reading package lists... Done
W: http://archive.canonical.com/dists/precise/Release.gpg: Signature by key 630239CC130E1A7FD81A27B140976EAF437D05B5 uses weak digest algorithm (SHA1)
the.kim@ubuntu-gpu-office:~$ sudo apt-get install nvidia-docker2
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following additional packages will be installed:
  docker-ce libnvidia-container-tools libnvidia-container1
  nvidia-container-runtime nvidia-container-runtime-hook
The following NEW packages will be installed:
  libnvidia-container-tools libnvidia-container1 nvidia-container-runtime
  nvidia-container-runtime-hook nvidia-docker2
The following packages will be upgraded:
  docker-ce
1 upgraded, 5 newly installed, 0 to remove and 3 not upgraded.
Need to get 2,375 kB/36.3 MB of archives.
After this operation, 42.1 MB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 https://nvidia.github.io/libnvidia-container/ubuntu16.04/amd64  libnvidia-container1 1.0.0~beta.1-1 [55.7 kB]
Get:2 https://nvidia.github.io/libnvidia-container/ubuntu16.04/amd64  libnvidia-container-tools 1.0.0~beta.1-1 [14.8 kB]
Get:3 https://nvidia.github.io/nvidia-container-runtime/ubuntu16.04/amd64  nvidia-container-runtime-hook 1.3.0-1 [576 kB]
Get:4 https://nvidia.github.io/nvidia-container-runtime/ubuntu16.04/amd64  nvidia-container-runtime 2.0.0+docker18.03.0-1 [1,726 kB]
Get:5 https://nvidia.github.io/nvidia-docker/ubuntu16.04/amd64  nvidia-docker2 2.0.3+docker18.03.0-1 [2,888 B]
Fetched 2,375 kB in 4s (548 kB/s)          
(Reading database ... 263505 files and directories currently installed.)
Preparing to unpack .../docker-ce_18.03.0~ce-0~ubuntu_amd64.deb ...
Unpacking docker-ce (18.03.0~ce-0~ubuntu) over (17.12.0~ce-0~ubuntu) ...
Selecting previously unselected package libnvidia-container1:amd64.
Preparing to unpack .../libnvidia-container1_1.0.0~beta.1-1_amd64.deb ...
Unpacking libnvidia-container1:amd64 (1.0.0~beta.1-1) ...
Selecting previously unselected package libnvidia-container-tools.
Preparing to unpack .../libnvidia-container-tools_1.0.0~beta.1-1_amd64.deb ...
Unpacking libnvidia-container-tools (1.0.0~beta.1-1) ...
Selecting previously unselected package nvidia-container-runtime-hook.
Preparing to unpack .../nvidia-container-runtime-hook_1.3.0-1_amd64.deb ...
Unpacking nvidia-container-runtime-hook (1.3.0-1) ...
Selecting previously unselected package nvidia-container-runtime.
Preparing to unpack .../nvidia-container-runtime_2.0.0+docker18.03.0-1_amd64.deb ...
Unpacking nvidia-container-runtime (2.0.0+docker18.03.0-1) ...
Selecting previously unselected package nvidia-docker2.
Preparing to unpack .../nvidia-docker2_2.0.3+docker18.03.0-1_all.deb ...
Unpacking nvidia-docker2 (2.0.3+docker18.03.0-1) ...
Processing triggers for man-db (2.7.5-1) ...
Processing triggers for ureadahead (0.100.0-19) ...
Processing triggers for systemd (229-4ubuntu21.2) ...
Processing triggers for libc-bin (2.23-0ubuntu10) ...
Setting up docker-ce (18.03.0~ce-0~ubuntu) ...
Setting up libnvidia-container1:amd64 (1.0.0~beta.1-1) ...
Setting up libnvidia-container-tools (1.0.0~beta.1-1) ...
Setting up nvidia-container-runtime-hook (1.3.0-1) ...
Setting up nvidia-container-runtime (2.0.0+docker18.03.0-1) ...
Setting up nvidia-docker2 (2.0.3+docker18.03.0-1) ...
Processing triggers for libc-bin (2.23-0ubuntu10) ...
the.kim@ubuntu-gpu-office:~$ sudo pkill -SIGHUP dockerd
the.kim@ubuntu-gpu-office:~$ docker run --runtime=nvidia --rm nvidia/cudanvidia-smi
docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.37/containers/create: dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
the.kim@ubuntu-gpu-office:~$ docker run --runtime=nvidia --rm nvidia/cuda
docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.37/containers/create: dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
the.kim@ubuntu-gpu-office:~$ sudo docker run --runtime=nvidia --rm nvidia/cuda
Unable to find image 'nvidia/cuda:latest' locally
latest: Pulling from nvidia/cuda
22dc81ace0ea: Pull complete 
1a8b3c87dba3: Pull complete 
91390a1c435a: Pull complete 
07844b14977e: Pull complete 
b78396653dae: Pull complete 
95e837069dfa: Pull complete 
fef4aadda783: Pull complete 
343234bd5cf3: Pull complete 
64e8786fc8c1: Pull complete 
d6a4723d353c: Pull complete 
Digest: sha256:3524adf9b563c27d9a0f6d0584355c1f4f4b38e90b66289b8f8de026a9162eee
Status: Downloaded newer image for nvidia/cuda:latest
the.kim@ubuntu-gpu-office:~$ sudo docker run --runtime=nvidia --rm nvidia/cuda
the.kim@ubuntu-gpu-office:~$ sudo docker run --runtime=nvidia --rm nvidia/cuda nvidia-smi
Mon Mar 26 08:19:16 2018       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 384.111                Driver Version: 384.111                   |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce GTX 108...  Off  | 00000000:01:00.0  On |                  N/A |
| 23%   37C    P2    50W / 250W |    351MiB / 11171MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
|   1  GeForce GTX 108...  Off  | 00000000:02:00.0 Off |                  N/A |
| 23%   23C    P8     7W / 250W |      2MiB / 11172MiB |      1%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
+-----------------------------------------------------------------------------+
the.kim@ubuntu-gpu-office:~$ nvidia-docker run -it -p 8888:8888 tensorflow/tensorflow:latest-gpu
docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.37/containers/create: dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
the.kim@ubuntu-gpu-office:~$ sudo nvidia-docker run -it -p 8888:8888 tensorflow/tensorflow:latest-gpu
Unable to find image 'tensorflow/tensorflow:latest-gpu' locally
latest-gpu: Pulling from tensorflow/tensorflow
1be7f2b886e8: Pull complete 
6fbc4a21b806: Pull complete 
c71a6f8e1378: Pull complete 
4be3072e5a37: Pull complete 
06c6d2f59700: Pull complete 
367cef5aafd7: Pull complete 
9f7a98b30314: Pull complete 
b6201ef93c5f: Pull complete 
eda6fa60514e: Pull complete 
aa49e57dacf4: Pull complete 
a7f4f7bbf1dc: Pull complete 
628d949484a2: Pull complete 
99db460b64c4: Pull complete 
7bf9b16eaab5: Pull complete 
310786d11793: Pull complete 
ad0f69e4b506: Pull complete 
e601455e86e1: Pull complete 
Digest: sha256:49e6d5cd2e94bbb5f807f5706045951955e53fa1f8f5483316271761115d6047
Status: Downloaded newer image for tensorflow/tensorflow:latest-gpu
[I 08:21:59.386 NotebookApp] Writing notebook server cookie secret to /root/.local/share/jupyter/runtime/notebook_cookie_secret
[W 08:21:59.405 NotebookApp] WARNING: The notebook server is listening on all IP addresses and not using encryption. This is not recommended.
[I 08:21:59.409 NotebookApp] Serving notebooks from local directory: /notebooks
[I 08:21:59.409 NotebookApp] 0 active kernels
[I 08:21:59.409 NotebookApp] The Jupyter Notebook is running at:
[I 08:21:59.410 NotebookApp] http://[all ip addresses on your system]:8888/?token=38913c151afb44dfdae1379268b9c77cd369e9543f68bcf6
[I 08:21:59.410 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 08:21:59.410 NotebookApp] 
    
    Copy/paste this URL into your browser when you connect for the first time,
    to login with a token:
        http://localhost:8888/?token=38913c151afb44dfdae1379268b9c77cd369e9543f68bcf6
[I 08:23:10.863 NotebookApp] 302 GET /?token=38913c151afb44dfdae1379268b9c77cd369e9543f68bcf6 (172.17.0.1) 0.33ms
[W 08:23:41.082 NotebookApp] Forbidden
[W 08:23:41.082 NotebookApp] 403 GET /api/config/tree?_=1522052620088 (172.17.0.1) 0.56ms referer=http://localhost:8888/tree
[W 08:23:41.083 NotebookApp] Forbidden
[W 08:23:41.083 NotebookApp] 403 GET /api/config/common?_=1522052620089 (172.17.0.1) 0.45ms referer=http://localhost:8888/tree
[W 08:23:41.091 NotebookApp] Forbidden
[W 08:23:41.092 NotebookApp] 403 GET /api/terminals?_=1522052620090 (172.17.0.1) 0.49ms referer=http://localhost:8888/tree
[W 08:23:41.093 NotebookApp] Forbidden
[W 08:23:41.093 NotebookApp] 403 GET /api/kernelspecs (172.17.0.1) 0.47ms referer=http://localhost:8888/tree
[W 08:23:41.094 NotebookApp] Forbidden
[W 08:23:41.094 NotebookApp] 403 GET /api/sessions?_=1522052620091 (172.17.0.1) 0.60ms referer=http://localhost:8888/tree
[W 08:23:41.095 NotebookApp] Forbidden
[W 08:23:41.095 NotebookApp] 403 GET /api/terminals?_=1522052620092 (172.17.0.1) 0.45ms referer=http://localhost:8888/tree
[I 08:24:39.327 NotebookApp] Writing notebook-signing key to /root/.local/share/jupyter/notebook_secret
[W 08:24:39.328 NotebookApp] Notebook 1_hello_tensorflow.ipynb is not trusted
[I 08:24:39.777 NotebookApp] Kernel started: 8db0789f-82f2-455a-bcfc-54e7909036af
[I 08:24:40.046 NotebookApp] Adapting to protocol v5.1 for kernel 8db0789f-82f2-455a-bcfc-54e7909036af
2018-03-26 08:25:58.142096: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2018-03-26 08:25:58.282557: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2018-03-26 08:25:58.282986: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1212] Found device 0 with properties: 
name: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.582
pciBusID: 0000:01:00.0
totalMemory: 10.91GiB freeMemory: 10.41GiB
2018-03-26 08:25:58.393509: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2018-03-26 08:25:58.393941: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1212] Found device 1 with properties: 
name: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.582
pciBusID: 0000:02:00.0
totalMemory: 10.91GiB freeMemory: 10.75GiB
2018-03-26 08:25:58.395012: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1227] Device peer to peer matrix
2018-03-26 08:25:58.395034: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1233] DMA: 0 1 
2018-03-26 08:25:58.395041: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1243] 0:   Y Y 
2018-03-26 08:25:58.395046: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1243] 1:   Y Y 
2018-03-26 08:25:58.395052: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1312] Adding visible gpu devices: 0, 1
2018-03-26 08:25:58.712986: I tensorflow/core/common_runtime/gpu/gpu_device.cc:993] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10077 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)
2018-03-26 08:25:58.792081: I tensorflow/core/common_runtime/gpu/gpu_device.cc:993] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 10407 MB memory) -> physical GPU (device: 1, name: GeForce GTX 1080 Ti, pci bus id: 0000:02:00.0, compute capability: 6.1)
[I 08:26:39.774 NotebookApp] Saving file at /1_hello_tensorflow.ipynb



