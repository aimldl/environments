# Dockerfile-baseimage_kubeflow_h2o_ai_openml     Dockerfile for open-source H2O.ai on Kubeflow's Base Image
#   * Rev.1: 2020-05-29 (Fri)
#   * Draft: 2020-04-27 (Mon)
#
# Step 1. Change the file name to Dockerfile
#     $ mv Dockerfile-baseimage_kubeflow_h2o_ai_openml Dockerfile
#
# Step 2. Build a Docker image from Dockerfile.
#     $ docker build -t aimldl/baseimage-kubeflow-h203.30.0.3_openml0.10.2_python3_ubuntu18.04 - < Dockerfile
#
#     Options
#       --tag, -t  Name and optionally a tag in the ‘name:tag’ format
# Note: related commands are grouped together. It's the matter of style.

# Parent Image
ARG PARENT_IMAGE="python:3"
FROM $PARENT_IMAGE
MAINTAINER "Tae-Hyung T. Kim, Ph.D. https://github.com/aimldl"

# Working Directory
ARG NB_USER=jovyan
WORKDIR /home/$NB_USER
ENV HOME /home/$NB_USER

# TODO: I'm not sure if these are necessary.
ENV NB_USER $NB_USER
ENV NB_UID=1000

# Basic commands for Ubuntu Linux
RUN apt-get update -y
RUN apt-get install -yq --no-install-recommends \
  lsb-release \
  locales \
  build-essential \
  cmake \
  g++ \
  sudo
RUN apt-get install -yq --no-install-recommends \
  curl \
  wget \
  openssh-client \
  ca-certificates \
  net-tools \
  iproute2 \
  strace\
  diffstat\
  pkg-config \
  tcpdump
RUN apt-get install -yq --no-install-recommends \
  zip \
  bzip2 \
  unzip
RUN apt-get install -yq --no-install-recommends \
  vim \
  nano \
  emacs
RUN apt-get install -yq --no-install-recommends \
  tree \
  screen

# Extended commands for Ubuntu Linux
RUN apt-get install -yq --no-install-recommends \
  git \
  graphviz

# Clean up
RUN apt-get clean && \
  rm -rf /var/lib/apt/lists/*

# Basic packages for Python3
RUN apt-get update -y && apt-get install -y \
  python3 \
  python3-pip \
  python3-dev \
  python3-setuptools
RUN pip3 install --upgrade pip
RUN pip3 install ipython

# Extended packages for Python3
RUN pip3 install numpy
RUN pip3 install pandas
RUN pip3 install matplotlib
RUN pip3 install scipy
RUN pip3 install sympy
RUN pip3 install scikit-learn
RUN pip3 install h5py
RUN pip3 install pillow
RUN pip3 install pydotplus
RUN pip3 install seaborn
RUN pip3 install pyyaml

# Jupyter & Jupyter Lab
RUN pip3 install jupyter -U
RUN pip3 install jupyterlab && \
  jupyter serverextension enable --py jupyterlab --sys-prefix
# 8888=UDP port, Datagram Protocol, https://www.auditmypc.com/udp-port-8888.asp
EXPOSE 8888

# OpenML, https://github.com/aimldl/python3/blob/master/packages/openml/INSTALL.md
RUN pip3 install openml

# Java for H2O.ai
#   https://www.hostinger.com/tutorials/install-java-ubuntu
#   Java is required to run the H2O.ai server
RUN apt-get install -y default-jre default-jdk

# H2O.ai
#   Python dependencies
RUN pip3 install requests
RUN pip3 install tabulate
RUN pip3 install "colorama>=0.3.8"
RUN pip3 install future
#   Latest stable version of H2O
RUN pip install -f http://h2o-release.s3.amazonaws.com/h2o/latest_stable_Py.html h2o
#RUN python -c "import h2o; print(h2o.__version__)"

#   H2O server
#     https://github.com/aimldl/python3/blob/master/packages/h2o/INSTALL.md
#     Note: the working directory is set to be /home/$NB_USER
RUN wget http://h2o-release.s3.amazonaws.com/h2o/rel-zahradnik/3/h2o-3.30.0.3.zip
RUN unzip h2o-3.30.0.3.zip
RUN rm h2o-3.30.0.3.zip
RUN ln -s /home/$NB_USER/h2o-3.30.0.3 /home/$NB_USER/h2o

# kubectl
#   https://kubernetes.io/docs/tasks/tools/install-kubectl/
#   sudo is removed from the commands in the above document.
RUN apt-get update && sudo apt-get install -y apt-transport-https gnupg2
RUN curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
RUN echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
RUN apt-get update
RUN apt-get install -y kubectl

# Kubeflow 
#   Q: Does Kubeflow require to set USER as root?
#   I prefer to setting an user as follows.
#     RUN chown -R user: /home/user
#     USER user
USER root

# Documentation / Jupyter Notebooks / Create a Custom Jupyter Image
# https://www.kubeflow.org/docs/notebooks/custom-notebook/
#
# When this image starts, the command "jupyter lab ..." is executed.

ENV NB_PREFIX /
CMD ["sh","-c", "jupyter lab --notebook-dir=/home/jovyan --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token='' --NotebookApp.password='' --NotebookApp.allow_origin='*' --NotebookApp.base_url=${NB_PREFIX}"]
# Start the H2O server when this image starts; add the following command a bash script .bashrc 
#   cd h2o && java -jar h2o.jar
# p.s. To open the H2O server in general, open a web browser & enter "http://localhost:54321"
