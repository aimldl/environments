#!/bin/bash
#  install_kubernetes
#
#  * Rev.7: 2020-07-27 (Mon)
#  * Rev.6: 2020-07-24 (Fri)
#  * Rev.5: 2020-07-23 (Thu)
#  * Rev.4: 2020-07-21 (Tue)
#  * Rev.3: 2020-07-20 (Mon)
#  * Rev.2: 2020-07-16 (Thu)
#  * Rev.1: 2020-07-15 (Wed)
#  * Draft: 2020-07-14 (Tue)
#
#  Run the commands on a Master and then worker node(s).
#    $ chmod +x install_kubernetes
#    $ ./install_kubernetes
#    
#  To edit this file,
#    $ nano install_kubernetes

source function_definitions

# Options to install K8s (Kubernetes)
#   1-1. Stand-alone installation of K8s on master
#   1-2. Stand-alone installation of K8s on worker
#   1-3. K8s installation for Kubeflow on master
#   1-4. K8s installation for Kubeflow on worker

INSTALL_OPTION=`read_installation_option`
NODE_TYPE=`read_master_worker_or_test`
printf '\n'
printf "$INSTALL_OPTION will be installed on $NODE_TYPE. \n"

# Expected outputs
#   Kubernetes will be installed on master.
#   Kubernetes will be installed on worker.
#   Kubernetes_and_Kubeflow will be installed on master.
#   Kubernetes_and_Kubeflow will be installed on worker.

if [ $NODE_TYPE == 'master' ]; then
  printf 'Sourcing commands4master ... \n'
  source commands4master
elif [ $NODE_TYPE == 'worker' ]; then
  # Run commands4master first. commands4worker is generated by commands4master.
  # Namely, commands4worker does not exist at first.
  printf 'Sourcing commands4worker ... \n'
  source commands4worker
elif [ $NODE_TYPE == 'test' ]; then
  printf 'Sourcing commands4test ... \n'
  source commands4test
else
  # Defensive programming
  printf "Wrong NODE_TYPE $NODE_TYPE. \n"
fi

# EOF
