# Makefile.in
#
# Version: 1.0
# Last updated:  Jan. 28, 2011 (Fri)
# First written: Feb. 22, 2008 (Fri)
#
# Written by Tae-Hyung Kim, mrtonnet [at] gmail [dot] com

#################################
#      Directory structure      #
#################################
# Note the perspective of Makefile.in is
# from the file (Makefile) includes this file (Makefile.in).
# Because Makefile is located in directory bld_opt or bld_dbg,
# the current working directory is either bld_opt or bld_dbg.
# Therefore, the project directory is "../..", not "..".

BIN = bin
DIR_PROJECT = ../..
DIR_BIN = $(DIR_PROJECT)/$(BIN)

DIR_BUILD = .
DIR_OBJ = $(DIR_BUILD)/obj

#################################
#            File               #
#################################
# DEFINE THIS IN Makefile
# FILE_EXE = 
# DEFINE THIS IN Makefile

FILE_INSTALL = install

#################################
#            Options            #
#################################
#CXX = g++ -W -Wall -g -pendantic-errors
CXX = g++
# DEFINE THIS IN Makefile
# CXXFLAGS = -g
# DEFINE THIS IN Makefile

# Undefined references. When syntax seems to be perfect.
# Then check OBJECTS if you've included the file in OBJECTS.

# Note a header is not necessary to include in OBJECTS.
# An error message will look like.
#    filename.hpp: file not recognized: File format not recognized

OBJECTS = \
   ../Main.cpp \
   ../ShellCommands.cpp \
   ../Myiostream.cpp \
   ../CommandLineArguments.cpp \
   ../Config.cpp \
   ../GetOpt.cpp \
   ../MyStringUtilFunctions.cpp \
   ../ConfigGnuPlot.cpp \
   ../ConfigPso.cpp \
   ../ConfigNeuralNetworks.cpp \
   ../ConfigDirStruct.cpp \
   ../ConfigSimulations.cpp \
   ../ConfigData.cpp \
   ../ConfigCnn.cpp \
   ../ApiGnuplot.cpp \
   ../ApiPostprocess.cpp \
   ../SimObject.cpp \
   ../BadukData.cpp \
   ../TrainingAlgorithms.cpp \
   ../Pso.cpp \
   ../PsoParticle.cpp \
   ../Neuron.cpp \
   ../NeuralNetworks.cpp \
   ../Cnn.cpp \
   ../Cell.cpp \
   ../NumberConversion.cpp \
   ../RandomVariables.cpp \
   ../Error.cpp

#################################
#            Targets            #
#################################
# Note: make compiles the c/c++ source files internally if CFLAGS is set up.
# Internal macros
# $*	Current target file without file extension
# $@	Current target file
# $<	File names newer than the current target file
# $*	File names newer than the current target file

# Compile and then copy the compiled executable to directory DIR_BIN
all: $(DIR_BUILD)/$(FILE_EXE)

$(DIR_BUILD)/$(FILE_EXE): $(OBJECTS)
	$(CXX) $(CXXFLAGS) -o $@ $(OBJECTS)
	cp $@ $(DIR_BIN)

$(DIR_OBJ)/%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

%.o : %.cxx 
	$(CXX) $(CXXFLAGS) -c $< -o $@

clean CLEAN:
	@echo "clean called..."
#	FILE2DEL = `find $(DIR_OBJ) -name "*.o" -o -name "*.d"`
#	FILE2DEL = test_file2del
#	@echo "$(FILE2DEL)"
#$(FILE2DEL)
#	FILE2DEL =  $(DIR_BUILD)/$(FILE_EXE) $(DIR_BIN)/$(FILE_EXE)
#	@echo "$(FILE2DEL)
#	-rm -f $(FILE2DEL)
	-rm -f `find $(DIR_OBJ) -name "*.o" -o -name "*.d"` $(DIR_BUILD)/$(FILE_EXE) $(DIR_BIN)/$(FILE_EXE)
install:
	# This is not tested. Check this later.
	$(DIR_PROJECT)/$(FILE_INSTALL)
