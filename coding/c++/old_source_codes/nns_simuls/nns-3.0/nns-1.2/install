#!/bin/bash
# install
#
# Last updated:  Mar.6, 201 (Sun)
# First written: Oct.15, 2007 (Mon)
# Tae-Hyung "T" Kim, mrtonnet [at] gmail [dot] com
#
# This script must be located on the netsim root directory.
# Assume the directories are already created.
#
# Refer to show_usage_install for the usage.
# Refer to the manual for details.

################################################################################
#                        Options and Configuration                             #
################################################################################

#####################################
# Default options and configuration #
#####################################
# PLEASE DO NOT CHANGE THIS!
VERSION="1.2";
VER_RELEASED="Mar. 19, 2011 (Sat)";
# PLEASE DO NOT CHANGE THIS!

#####################################
#        Directory Structure        #
#####################################
DIR_PROJECT=~+;						# Same as `pwd`
DIR_BIN="bin";
DIR_CONFIGFILES="config_files";
DIR_OUTPUTS="outputs";
DIR_RESULTS="results";
DIR_SOURCECODES="source_codes";
DIR_BUILD="${DIR_SOURCECODES}";
#DIR_BUILD="${DIR_SOURCECODES}/build";
#DIR_BUILD_DBG="${DIR_SOURCECODES}/build_dbg";

# Set the path for the executables.
export PATH="${PATH}:${DIR_PROJECT}"
export PATH="${PATH}:${DIR_PROJECT}/${DIR_BIN}"

#####################################
#              Files                #
#####################################
CMD_NNS="nns-${VERSION}.exe";
#CMD_NNS_DBG="nns-${VERSION}-dbg.exe";

################################################################################
#                                Procedures                                    #
################################################################################
show_usage_install ()
{
echo "  \"install\" installs/uninstalls nns.
It compiles both optimized and debugging mode of the program.

Usage: install [option]
   Shell options:
	-h   help
	-u   uninstall
   Type 'install -h' for help.

Example:
	./install
	./install -u

	
Bug report: Please report bugs at mrtonnet [at] gmail [dot] com.";
  exit 1;
}

set_path_info () {
echo "Set the PATH information in the .bashrc as follows.
And then restart the terminal to take effect.

DIR_NNS=\"${DIR_PROJECT}\";
PATH="\${PATH}:~/\${DIR_NNS}:~/\${DIR_NNS}/bin";
";
}

install_nns () {

  FLAG_SUCCESS=1;

echo -e "\033[36m
---------------------------------
   Intall nns version ${VERSION}
---------------------------------
make clean;\033[0m";
 # Make clean
  make -C "${DIR_PROJECT}/${DIR_BUILD}" clean;
#  make -C "${DIR_PROJECT}/${DIR_BUILD_DBG}" clean;

echo -e "\033[36m\nmake;\033[0m";
  # Make
  make -C "${DIR_PROJECT}/${DIR_BUILD}";
#  make -C "${DIR_PROJECT}/${DIR_BUILD_DBG}";

echo -e "\033[36mVerify the compilation results.\033[0m";

  if test ! -e ${DIR_BIN}/${CMD_NNS};then
    echo -e "\033[36m  Failure to create ${DIR_BIN}/${CMD_NNS}.\033[0m";
    FLAG_SUCCESS=0;
  fi

#  if test ! -e ${DIR_BIN}/${CMD_NNS_DBG};then   
#    echo -e "\033[36m  Failure to create ${DIR_BIN}/${CMD_NNS_DBG}.\033[0m";
#    FLAG_SUCCESS=0;
#  fi

  if [ ${FLAG_SUCCESS} -eq 1 ];then
    echo -e "\033[36mInstallation is successful!\033[0m";
    echo -e "\033[36mEnsure to update the Eclipse project to use Eclipse.\033[0m";
    set_path_info;
  else
    exit 1;
  fi
}

uninstall_nns ()
{
  FLAG_SUCCESS=1;
  echo -e "\033[36mUninstall nns? (y/n)\033[0m";
  read;

  if [ $REPLY == "y" ] || [ $REPLY == "Y" ]; then
    ############################################################################
    echo -e "\033[36m------------------------------\033[0m";
    echo -e "\033[36m   Unintall nns version ${VERSION}\033[0m";
    echo -e "\033[36m------------------------------\033[0m";
    # Make clean
    make -C "${DIR_PROJECT}/${DIR_BUILD}" clean;
#    make -C "${DIR_PROJECT}/${DIR_BUILD_DBG}" clean;

    echo -e "\033[36mVerify the 'Make clean' results.\033[0m";
    if test -e ${DIR_BIN}/${CMD_NNS};then
      echo -e "\033[36m  Failure to remove ${DIR_BIN}/${CMD_NNS}.\033[0m";
      FLAG_SUCCESS=0;
    fi
#    if test -e ${DIR_BIN}/${CMD_NNS_DBG};then   
#      echo -e "\033[36m  Failure to remove ${DIR_BIN}/${CMD_NNS_DBG}.\033[0m";
#      FLAG_SUCCESS=0;
#    fi
    if [ ${FLAG_SUCCESS} -eq 1 ]; then
      echo -e "\033[36mSuccessfully uninstalled.\033[0m";
    else
      echo -e "\033[36mUninstall failed.\033[0m";
      exit 1;
    fi
    ############################################################################
  elif [ $REPLY == "n" ] || [ $REPLY == "N" ]; then
    echo -e "\033[36mAbort install and exit.\033[0m";
    exit 1;   
  else
    show_usage_install;
    exit 1;
  fi
}

#####################################
#        Command line options       #
#####################################
MIN_NUM_OF_ARGS=0;
COMMAND_LINE_OPTS=":hu";

if [ $# -lt ${MIN_NUM_OF_ARGS} ];then
   show_usage_install;
   exit 1;
fi

while getopts ${COMMAND_LINE_OPTS} Option; do
   case ${Option} in
      h ) show_usage_install; exit 1; ;;
      u ) uninstall_nns; exit 1; ;;
      * ) echo "Unknown command line option."; # -${Option}.";
      	  echo "Type \`install -h\` for help.";
      	  exit 1;
      	;;
   esac
done
shift $((${OPTIND} -1))

################################################################################

install_nns

################################################################################
exit 0;
#EOF
