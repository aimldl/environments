# keras-classify_pima_indians_diabetes_wt_dense.txt

# Data
# Google search: pima indians diabetes
# Download page: https://gist.github.com/ktisha/c21e73a1bd1700294ef790c56c8aec1f
# Download link: https://gist.github.com/ktisha/c21e73a1bd1700294ef790c56c8aec1f/archive/819b69b5736821ccee93d05b51de0510bea00294.zip
# Unzipped file name: pima-indians-diabetes.csv
#
# The first 11 lines of the downloaded CSV file
## 1. Number of times pregnant
## 2. Plasma glucose concentration a 2 hours in an oral glucose tolerance test
## 3. Diastolic blood pressure (mm Hg)
## 4. Triceps skin fold thickness (mm)
## 5. 2-Hour serum insulin (mu U/ml)
## 6. Body mass index (weight in kg/(height in m)^2)
## 7. Diabetes pedigree function
## 8. Age (years)
## 9. Class variable (0 or 1)
#6,148,72,35,0,33.6,0.627,50,1
#1,85,66,29,0,26.6,0.351,31,0
#...


import numpy as np
from keras.models import Sequential
from keras.layers import Dense

np.random.seed(5)
dataset = np.loadtxt("pima-indians-diabetes.csv",delimiter=",")

x_train = dataset[:700,0:8]
y_train = dataset[:700,8]
x_test = dataset[700:,0:8]
y_test = dataset[700:,8]

model = Sequential()
model.add( Dense(12, input_dim=8, activation='relu'))
model.add( Dense(8, activation='relu'))
model.add( Dense(1,activation='sigmoid'))

model.compile( loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(x_train, y_train, epochs=1500, batch_size=64)
scores = model.evaluate(x_test, y_test)
print("%s: %.2f%%" % (model.metrics_names[1], scores[1]*100))

#acc: 76.47%
